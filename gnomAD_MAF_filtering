ml bcftools/1.11
cd .../gnomad

bcftools view -h gnomad.genomes.r2.1.1.sites.22.vcf.bgz > chr22_header.txt
##INFO=<ID=AF_nfe,Number=A,Type=Float,Description="Alternate allele frequency in samples of Non-Finnish European ancestry">
##INFO=<ID=controls_AF_nfe,Number=A,Type=Float,Description="Alternate allele frequency in samples of Non-Finnish European ancestry in the controls subset">
##INFO=<ID=AF_popmax,Number=A,Type=Float,Description="Maximum allele frequency across populations (excluding samples of Ashkenazi, Finnish, and indeterminate ancestry)">
##INFO=<ID=controls_AF_popmax,Number=A,Type=Float,Description="Maximum allele frequency across populations (excluding samples of Ashkenazi, Finnish, and indeterminate ancestry) in the controls subset">
# extract info for each variant and make table:
#bcftools query -f '%CHROM %POS %REF %ALT %INFO/AF_nfe %INFO/controls_AF_nfe %INFO/AF_popmax %INFO/controls_AF_popmax\n' gnomad.genomes.r2.1.1.sites.22.vcf.bgz | head -3
#bcftools query -f '%CHROM %POS %REF %ALT %INFO/AF_nfe\n' gnomad.genomes.r2.1.1.sites.22.vcf.bgz > chr22_gnomad_nonFinnish_AF
#
bcftools query -f '%CHROM %POS %REF %ALT %INFO/AF_nfe\n' gnomad.genomes.r2.1.1.sites.vcf.bgz > GNOMAD_NonFinnish_AF
#
# genomewide stats downloaded 9/10/2021 - will print out:
#CHR POS REF ALT "Alternate allele frequency in samples of Non-Finnish European ancestry"
#22 16050036 A C 0.274194
#22 16050068 A G 0
#22 16050069 C T 0
#...
#---
# in 5th column, require >0
awk '(NR>1) && ($5 > 0 ) ' GNOMAD_NonFinnish_AF > GNOMAD_NonFinnish_AF_non0
#
#gnomad_file<-".../gnomad/GNOMAD_NonFinnish_AF_non0"
#gnomad_file<-fread(gnomad_file)
#gnomad_file<-gnomad_file[nchar(gnomad_file$V3)==1 & nchar(gnomad_file$V4)==1,]
gnomad_file$match<-NA; gnomad_file$match<-paste0(gnomad_file$V1,":",gnomad_file$V2)
#fwrite(gnomad_file,file="GNOMAD_NonFinnish_AF_non0_biallelic",sep="\t",quote=F)
#
# gnomAD-based filtering: load GWAS results
#dat<-fread("...cc_matching/CaseControl_1to1_GWAS_HCV_Clearance_PropensityMatching_04212022.C_UKB.glm.logistic.hybrid")
dat$match<-paste0(dat$'#CHROM',":",dat$POS)
ukb<-dat
# for plink gwas output - REF/ALT/A1 - A1 might be refrence allele sometimes. make A0 the oposite of A1, this step unneccesary for REGENIE output
ukb$A2<-ifelse(ukb$A1==ukb$ALT,ukb$REF,ukb$ALT)
table(ukb$REF==ukb$A2)
#  FALSE
#  ~40k
#
# filter focused on markers with P<[some value]
gnomad_file<-bigreadr::fread2("GNOMAD_NonFinnish_AF_non0_biallelic")
# 115 million SNPs
gnomad_file<-gnomad_file[gnomad_file$match %in% dat$match,]
# 6,173,770 positions
# prints out the duplicate variants, keep the one with matching alleles
table(duplicated(gnomad_file$match))
#165316
# focus on moderately significant hits
ukb<-ukb[ukb$P<0.001,] 
# re-filter gnomad_file to 'sig' hits
gnomad_file<-gnomad_file[gnomad_file$match %in% ukb$match,]
gnomad_file_dup<-gnomad_file[duplicated(gnomad_file$match),]
gnomad_file_dup$no_match<-NA
ukb_dups<-ukb[ukb$match %in% gnomad_file_dup$match,]
#
for(i in 1:nrow(ukb_dups)){
  varid<-ukb_dups[i,]$match
  if(nrow(gnomad_file_dup[gnomad_file_dup$match==varid,])>1) {
    #print(varid)
    tmp_gnomad<-gnomad_file_dup[gnomad_file_dup$match==varid,]
    alleles<-c(ukb[ukb$match==varid,]$A1,ukb[ukb$match==varid,]$A2)
    if(nrow(tmp_gnomad[tmp_gnomad$V3 %in% alleles & tmp_gnomad$V4 %in% alleles,])>0){
      gnomad_file_dup[gnomad_file_dup$match==varid,] <- tmp_gnomad[tmp_gnomad$V3 %in% alleles & tmp_gnomad$V4 %in% alleles,]
    } else {
      print(paste0(varid," not matched"))
      gnomad_file_dup[gnomad_file_dup$match==varid,]$no_match<-"no_match"
      }
  }
}
table(gnomad_file_dup$no_match) # prints out number of markers with no match
#
gnomad_file_dup_filt<-gnomad_file_dup
gnomad_file_nodup<-gnomad_file[!duplicated(gnomad_file$match),]
gnomad_file_nodup<-rbind(gnomad_file_nodup,gnomad_file_dup_filt[is.na(gnomad_file_dup_filt$no_match),1:6])
dim(gnomad_file_nodup)
gnomad_file_nodup<-gnomad_file_nodup[!duplicated(gnomad_file_nodup$match),]
dim(gnomad_file_nodup)
all(gnomad_file_nodup$match %in% ukb$match) #should be TRUE
ukb$gnomad_check<-NA
gnomad_file_nodup<-gnomad_file_nodup[,c(3:6)]
table(ifelse(ukb$match %in% gnomad_file_nodup$match,NA,"gnomad_missing"))
ukb$gnomad_check<-ifelse(ukb$match %in% gnomad_file_nodup$match,NA,"gnomad_missing")
#
gnomad_r_nodup<-gnomad_file_nodup
ukb_filt<-ukb
rownames(ukb_filt)<-ukb_filt$match
# iterate across all markers/positions
for(i in 1:nrow(ukb_filt)){
  varid<-ukb_filt$match[i]
  ukb_maf<-as.numeric(ukb_filt$A1_CTRL_FREQ[i])
#  ukb_maf<-as.numeric(ukb_filt$freq[i])
  if(varid %in% gnomad_r_nodup$match){
  tmp_gnomad<-gnomad_r_nodup[gnomad_r_nodup$match==varid,]
  gnomad_maf<-tmp_gnomad$V5
  if(tmp_gnomad$V3==ukb_filt$A2[i]){
    difference<-abs(ukb_maf-gnomad_maf)
    ukb_filt$gnomad_check[i]<-ifelse(gnomad_maf>=0.1 & difference>0.05, "exclude",ukb_filt$gnomad_check[i])
    ukb_filt$gnomad_check[i]<-ifelse(gnomad_maf<0.1 & difference>(gnomad_maf*0.25), "exclude",ukb_filt$gnomad_check[i])
    } else if(tmp_gnomad$V3==ukb_filt$A1[i]){
    difference<-abs(ukb_maf-(1-gnomad_maf))
    ukb_filt$gnomad_check[i]<-ifelse(gnomad_maf>=0.1 & difference>0.05, "exclude",ukb_filt$gnomad_check[i])
    ukb_filt$gnomad_check[i]<-ifelse(gnomad_maf<0.1 & difference>((1-gnomad_maf)*0.25), "exclude",ukb_filt$gnomad_check[i])
    } else { print(paste0("no match for ",varid))}
} else {
  print(paste0(varid, " not in GNOMAD (due to MAF/non-biallelic filter?)"))
  ukb_filt$gnomad_check[i]<-"gnomad_missing"
}
}
table(ukb_filt$gnomad_check)
#
#--------------------#
dat<-data.frame(dat)
dat$EXTRA<-""
dat[dat$match %in% ukb_filt[ukb_filt$gnomad_check %in% c("exclude"),]$match,]$EXTRA<-"exclude"
dat[dat$match %in% ukb_filt[ukb_filt$gnomad_check %in% c("gnomad_missing"),]$match,]$EXTRA<-"gnomad_missing"
#
#fwrite(dat,file="...cc_matching/CaseControl_1to1_GWAS_HCV_Clearance_PropensityMatching_04222022.C_UKB.glm.cleaned",quote=F,col.names=T,row.names=F,sep="\t")
